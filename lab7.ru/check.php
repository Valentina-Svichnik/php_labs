<!DOCTYPE html>
<html lang="ru">
<head>
	<meta charset="utf-8">
	<title>
        Свичник Валентина Алексеевна, 191-321. Лабораторная работа №А-7. 
        Основы использования массивов в программировании. Ввод данных и сортировка массивов.  
    </title>
    <link rel="stylesheet" href="style.css">
</head>


<body>
	<header>
		<div class="header-wrapper">
			<div class="logo">
        <img src="img/logo.png" alt="logo" width="100" height="100">
        <p>МОСКОВСКИЙ ПОЛИТЕХ</p>
      </div>
      <div class="main-menu">
       <p>Свичник Валентина Алексеевна, 191-321. <br> Лабораторная работа №А-7. </p>
      </div>
    </div>
	</header>

<main>
  <div class="container">
  <?php
  if($_POST['element0'] == ''){
  echo("Данные не были введены");
  exit(); }

  for($i=0; $i<$_POST['arrLength']; $i++) {              // для всех элементов массива
    if(arg_is_not_Num($_POST['element'.$i]) ) {        // если элемент массива не число
    echo 'Элемент массива "'. $_POST['element'.$i].'" – не число';  // выводим сообщение и завершаем программу
    exit(); }
  }

// определим реализуемый алгоритм и выведем его название
if( $_POST['algoritm']==='0' )
echo '<h1>Алгоритм 1</h1>';
else
if( $_POST['algoritm']==='1' )
echo '<h1>Алгоритм 2</h1>';
else
if( $_POST['algoritm']==='2' )
echo '<h1>Алгоритм 3</h1>';
else
if( $_POST['algoritm']==='3' )
echo '<h1>Алгоритм 4</h1>';
else
if( $_POST['algoritm']==='4' )
echo '<h1>Алгоритм 5</h1>';
else
if( $_POST['algoritm']==='5' )
echo '<h1>Алгоритм 6</h1>';
$arr = array();                                        // создаем пустой массив для формирования сортируемого списка
echo 'Исходный массив<br>----------------------------<br>';
for($i=0; $i<$_POST['arrLength']; $i++)                // для всех элементов массива
{
echo '<div class="arr_element">#'.$i.': '.
$_POST['element'.$i].'</div>';                         // выводим текущий элемент и его номер
$arr[] = $_POST['element'.$i];                         // добавляем элемент в массив для сортировки
}

// сообщение об успешной валидации
$n = 0;
echo '<br>----------------------------<br>Массив проверен, сортировка возможна<br><br>';
$time = microtime(true);                               // засекаем время начала сортировки
if( $_POST['algoritm']==='0' )
sort_0($arr, $n);                                   // запускаем сортировку по 1-му алгоритму (сортировка выбором)
else
if( $_POST['algoritm']==='1' )
sort_1($arr);                                   // запускаем сортировку по 2-му алгоритму (пузырьковый алгоритм)
else
if( $_POST['algoritm']==='2' )
sort_2($arr);                                   // запускаем сортировку по 3-му алгоритму (алгоритм Шелла)
else
if( $_POST['algoritm']==='3' )
sort_3($arr);                                   // запускаем сортировку по 4-му алгоритму (алгоритм садового гнома)
else
if( $_POST['algoritm']==='4' )
sort_4( $arr, $n );                              // запускаем сортировку по 5-му алгоритму (быстрая сортировка)
else
if( $_POST['algoritm']==='5' )
sort_5($arr, 0, count($arr)-1);;                 // запускаем сортировку по 6-му алгоритму (встроенная функция РНР для сортировки списков по значению)
if( $_POST['algoritm']==='6' )
sort_6($arr);


// считаем и выводим затраченое на сортировку время
echo 'Затрачено '.($time- microtime(true)).' микросекунд!';     

function arg_is_not_Num( $arg ){
    if( $arg=='' ) return true;                         // передана пустая строка
    if(is_numeric($arg)) return false; else return true;
}

// СОРТИРОВКА ВЫБОРОМ
function sort_0($arr){ 
    $n = 1;
    echo("$n итерация: ");
    print_r($arr);
    echo("<br>");
    for($i=0; $i<count($arr)-1; $i++){            // цикл для всех элементов списка
    $min=$i;                                      // неотсортированной частью массива считаем элементы начиная от текущего
    for($j=$i+1; $j<count($arr); $j++)            // ищем минимальный элемент
    if( $arr[$j]<$arr[$i] ) {$min=$j;              // в неотсортированной части
    $element = $arr[$i]; // меняем его с первым
    $arr[$i]=$arr[$min];
    $arr[$min] = $element;
    }
    $n++;
    echo("$n итерация: ");
    print_r($arr);
    echo("<br>");
    }
    echo("<br>");
    echo 'Сортировка завершена, проведено '.$n.' итераций. <br>';
    return $arr;
    }
// СОРТИРОВКА ПУЗЫРЬКОМ
    function sort_1($arr){
        $p = 1;
        echo("$p итерация: ");
        print_r($arr);
        echo("<br>");
        // число повторов: длина массива - 1
        for ($j = 0; $j < count($arr) - 1; $j++){
            for ($i = 0; $i < count($arr) - 1 - $j; $i++){
                // если текущий элемент больше следующего
                if ($arr[$i] > $arr[$i + 1]){
                    // меняем местами элементы
                    $temp = $arr[$i + 1];
                    $arr[$i + 1] = $arr[$i];
                    $arr[$i] = $temp;
                }
            }
    $p++;
    echo("$p итерация: ");
    print_r($arr);  
    echo("<br>");
    }
    echo("<br>");
    echo 'Сортировка завершена, проведено '.$p.' итераций. <br>';
    return $arr;
    } 
// АЛГОРИТМ ШЕЛЛА СОРТИРОВКИ МАССИВА
function sort_2($arr){
    $p = 1;
    echo("$p итерация: ");
    print_r($arr);
    echo("<br>");
    $left = 1;                         // слева-направо с первого элемента массива
    $right = count($arr)-1;            // справа-налево с последнего
    while( $left <= $right ) {          // пока границы не сойдутся
    // обход аналогично пузырьковому алгоритму с правой границы до левой
    for($i=$right; $i>=$left; $i--)
    if( $arr[$i-1]>$arr[$i] )          // если предыдущий элемент больше
    {
    $temp=$arr[$i-1];                  // меняем его с текущим местами
    $arr[$i-1]=$arr[$i];
    $arr[$i]=$temp;
    }
    $left++;                           // сдвигаем левую границу вправо
    // обход аналогично пузырьковому алгоритму с левой границы до правой
    for($i=$left; $i<=$right; $i++)
    if( $arr[$i-1]>$arr[$i] )          // если предыдущий элемент больше
    {
    $temp=$arr[$i-1];                  // меняем его с текущим местами
    $arr[$i-1]=$arr[$i];
    $arr[$i]=$temp;
    }
    $p++;
    echo("$p итерация: ");
    print_r($arr);  
    echo("<br>");
    $right--;                         // сдвигаем правую границу влево
    }
    echo("<br>");
    echo 'Сортировка завершена, проведено '.$p.' итераций. <br>';
    return $arr;
} 
 

// АЛГОРИТМ САДОВОГО ГНОМА
function sort_3($arr){
    $p = 1;
    echo("$p итерация: ");
    print_r($arr);
    echo("<br>");
    $i=1; // начинаем со второго элемента массива
    $j=2;
    while( $i<count($arr) ){ // пока не достигнут последний элемент - цикл
    // если первый элемент массива (предыдущего нет)
    // или текущий элемент больше предыдущего
    if( !$i || $arr[$i-1]<=$arr[$i] ){
    $i=$j; // возвращаемся к месту
    $j++; // до которого уже дошли
    }
    else // иначе
    {
    $temp = $arr[$i]; // меняем элементы местами
    $arr[$i] = $arr[$i-1];
    $arr[$i-1] = $temp;
    $i--; // шагаем назад
    }
    $p++;
    echo("$p итерация: ");
    print_r($arr);  
    echo("<br>");
    }
    echo("<br>");
    echo 'Сортировка завершена, проведено '.$p.' итераций. <br>';
    return $arr;
} 


// БЫСТРАЯ СОРТИРОВКА
function sort_4(&$array) {
    $left = 0;
    $right = count($array) - 1;
    $p = 0;
    
    my_sort($array, $left, $right, $p);
    
    }
    
    function my_sort($array, $left, $right, $p) {
    $l = $left;
    $r = $right;
    $center = $array[(int)($left + $right) / 2];

    
    //Цикл, начинающий саму сортировку
    do {
        $p++;
    echo("$p итерация: ");
    print_r($array);
    echo("<br>");
    //Ищем значения больше 'центра'
    while ($array[$r] > $center) {
    $r--;
    }
    
    //Ищем значения меньше 'центра'
    while ($array[$l] < $center) {
    $l++;
    }
    
    //После прохода циклов проверяем счетчики циклов
    if ($l <= $r) {
    list($array[$r], $array[$l]) = array($array[$l], $array[$r]);
    
    $l++;
    $r--;
    }
    

    
    
    //Повторяем цикл, если true
    } while ($l <= $r);
    
    if ($r > $left) {
    my_sort($array, $left, $r, $p);
    echo("<br>");
    echo 'Сортировка завершена, проведено '.$p.' итераций. <br>';
    }
    
    if ($l < $right) {
    my_sort($array, $l, $right, $p);
    echo("<br>");
    echo 'Сортировка завершена, проведено '.$p.' итераций. <br>';
    }
    
    }



// СОРТИРОВКА МАССИВА ВСТАВКАМИ
function sort_5($arr){
    $p = 1;
    echo("$p итерация: ");
    print_r($arr);
    echo("<br>");
 for($i=1; $i<count($arr); $i++){             // для всех элементов начиная с первого
    $val = $arr[$i];                          // сохраняем значение текущего элемента
    $j = $i-1;                                // начинаем перебор с предыдущего элемента
    // пока не найден элемент меньше текущего
    while( $j>=0 && $arr[$j]>$val ){
    $arr[$j+1] = $arr[$j];                     // сдвигаем элементы массива вправо
    $j--;
    }
    $arr[$j+1] = $val;                         // вставляем текущий элемент на свое место
    $p++;
    echo("$p итерация: ");
    print_r($arr);  
    echo("<br>");
    }
    echo '<br>Сортировка завершена, проведено '.$p.' итераций. <br>';
    return $arr;
} 

?>
  </div>
</main>


<footer>
<p> Лабораторная работа №А-7. </p>
</footer>

</body>
</html>